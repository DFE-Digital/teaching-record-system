name: Package application

on:
  workflow_call:
    outputs:
      api_docker_image:
        value: ${{ jobs.package.outputs.api_image_tag }}
      cli_docker_image:
        value: ${{ jobs.package.outputs.cli_image_tag }}
      ui_docker_image:
        value: ${{ jobs.package.outputs.ui_image_tag }}
      worker_docker_image:
        value: ${{ jobs.package.outputs.worker_image_tag }}

jobs:
  package:
    name: Build & package
    runs-on: ubuntu-latest
    env:
      CONTAINER_REGISTRY: ghcr.io

    outputs:
      api_image_tag: ${{ steps.image_tags.outputs.api_tag }}
      cli_image_tag: ${{ steps.image_tags.outputs.cli_tag }}
      ui_image_tag: ${{ steps.image_tags.outputs.ui_tag }}
      worker_image_tag: ${{ steps.image_tags.outputs.worker_tag }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: extractions/setup-just@v1

      - name: Get Docker image tags
        id: image_tags
        run: |
          echo "api_tag=$CONTAINER_REGISTRY/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]'):api-$GITHUB_SHA" >> $GITHUB_OUTPUT
          echo "cli_tag=$CONTAINER_REGISTRY/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]'):cli-$GITHUB_SHA" >> $GITHUB_OUTPUT
          echo "ui_tag=$CONTAINER_REGISTRY/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]'):ui-$GITHUB_SHA" >> $GITHUB_OUTPUT
          echo "worker_tag=$CONTAINER_REGISTRY/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]'):worker-$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build & push
        run: |
          if skopeo inspect "docker://$API_TAG" >/dev/null 2>&1; then
            echo "::notice::Skipping API build - tag already exists"
          else
            just docker-build-api --build-arg GIT_SHA=$GITHUB_SHA --tag $API_TAG
            docker push $API_TAG
          fi

          if skopeo inspect "docker://$CLI_TAG" >/dev/null 2>&1; then
            echo "::notice::Skipping CLI build - tag already exists"
          else
            just docker-build-cli --tag $CLI_TAG
            docker push $CLI_TAG
          fi

          if skopeo inspect "docker://$UI_TAG" >/dev/null 2>&1; then
            echo "::notice::Skipping UI build - tag already exists"
          else
            just docker-build-ui --build-arg GIT_SHA=$GITHUB_SHA --tag $UI_TAG
            docker push $UI_TAG
          fi

          if skopeo inspect "docker://$WORKER_TAG" >/dev/null 2>&1; then
            echo "::notice::Skipping worker build - tag already exists"
          else
            just docker-build-worker --build-arg GIT_SHA=$GITHUB_SHA --tag $WORKER_TAG
            docker push $WORKER_TAG
          fi
        env:
          API_TAG: ${{ steps.image_tags.outputs.api_tag }}
          CLI_TAG: ${{ steps.image_tags.outputs.cli_tag }}
          UI_TAG: ${{ steps.image_tags.outputs.ui_tag }}
          WORKER_TAG: ${{ steps.image_tags.outputs.worker_tag }}
