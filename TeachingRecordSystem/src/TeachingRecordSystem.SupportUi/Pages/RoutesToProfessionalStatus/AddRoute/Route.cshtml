@page "/route/add/route/{handler?}"
@addTagHelper *, Joonasw.AspNetCore.SecurityHeaders

@model TeachingRecordSystem.SupportUi.Pages.RoutesToProfessionalStatus.AddRoute.RouteModel
@{
    ViewBag.Title = Model.PageHeading;
}

@section Styles {
    <link rel="stylesheet" href="~/Styles/Components/accessible-autocomplete.min.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/Scripts/Components/accessible-autocomplete.min.js" asp-append-version="true"></script>
    <script asp-add-nonce="true">
        window.onload = function () {
            const selectIds = [
            '@nameof(Model.RouteId)',
            '@nameof(Model.ArchivedRouteId)'
            ];

            selectIds.forEach(id => {
                const selectElement = document.querySelector(`#${id}`);
                accessibleAutocomplete.enhanceSelectElement({
                selectElement: selectElement,
                defaultValue: '',
            });

            setTimeout(() => {
                const inputElement = selectElement.parentElement.querySelector('input');
                if (!inputElement) return;

                inputElement.addEventListener('input', function () {
                    if (inputElement.value === '') {
                        selectElement.value = '';
                    }
                });
                }, 0); // 0ms = defer to next event loop tick
            });
        }
    </script>
}

@section BeforeContent {
    <govuk-back-link href="@Model.BackLink">Back</govuk-back-link>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds-from-desktop">
        <form action="@LinkGenerator.RouteAddRoute(Model.PersonId, Model.JourneyInstance!.InstanceId, Model.FromCheckAnswers)" method="post">
            <span class="govuk-caption-l">Routes and professional status - @Model.PersonName</span>
            <h1 class="govuk-heading-l">@ViewBag.Title</h1>
            <govuk-select asp-for="RouteId" label-class="govuk-label--m">
                <govuk-select-hint>Start typing the name of the route</govuk-select-hint>
                <govuk-select-item value=""></govuk-select-item>
                @foreach (var route in Model.Routes)
                {
                    <govuk-select-item value="@route.RouteToProfessionalStatusTypeId">@route.Name</govuk-select-item>
                }
            </govuk-select>
            @if (@Model.ArchivedRouteId is not null)
            {
                <govuk-details open="true">
                    <govuk-details-summary>I cannot see the route I am looking for</govuk-details-summary>
                    <govuk-details-text>
                        <govuk-select asp-for=@Model.ArchivedRouteId label-class="govuk-label--m">
                            <govuk-select-hint>Start typing to search inactive or historical routes</govuk-select-hint>
                            <govuk-select-item value=""></govuk-select-item>
                            @foreach (var route in Model.ArchivedRoutes)
                            {
                                <govuk-select-item value="@route.RouteToProfessionalStatusTypeId">@route.Name</govuk-select-item>
                            }
                        </govuk-select>
                    </govuk-details-text>
                </govuk-details>
            }
            else
            {
                <govuk-details open="false">
                    <govuk-details-summary>I cannot see the route I am looking for</govuk-details-summary>
                    <govuk-details-text>
                        <govuk-select asp-for=@Model.ArchivedRouteId label-class="govuk-label--m">
                            <govuk-select-hint>Start typing to search inactive or historical routes</govuk-select-hint>
                            <govuk-select-item value=""></govuk-select-item>
                            @foreach (var route in Model.ArchivedRoutes)
                            {
                                <govuk-select-item value="@route.RouteToProfessionalStatusTypeId">@route.Name</govuk-select-item>
                            }
                        </govuk-select>
                    </govuk-details-text>
                </govuk-details>
            }

            <div class="govuk-button-group">
                <govuk-button type="submit">Continue</govuk-button>
                <govuk-button data-testid="cancel-button" formaction="@LinkGenerator.RouteAddRouteCancel(Model.PersonId, Model.JourneyInstance!.InstanceId)" class="govuk-button--secondary" type="submit">Cancel and return to record</govuk-button>
            </div>
        </form>
    </div>
</div>
