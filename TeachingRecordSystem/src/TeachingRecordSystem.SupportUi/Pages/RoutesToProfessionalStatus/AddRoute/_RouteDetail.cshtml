@model RouteDetailViewModel
<govuk-summary-list>
    <govuk-summary-list-row>
        <govuk-summary-list-row-key>Route</govuk-summary-list-row-key>
        <govuk-summary-list-row-value>@Model.RouteToProfessionalStatusType.Name</govuk-summary-list-row-value>
        <govuk-summary-list-row-actions>
            <govuk-summary-list-row-action data-testid="add-route-link" href="@LinkGenerator.RouteAddRoute(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="route">Change</govuk-summary-list-row-action>
        </govuk-summary-list-row-actions>
    </govuk-summary-list-row>

    <govuk-summary-list-row>
        <govuk-summary-list-row-key>Status</govuk-summary-list-row-key>
        <govuk-summary-list-row-value>@Model.Status.GetTitle()</govuk-summary-list-row-value>
        <govuk-summary-list-row-actions>
            <govuk-summary-list-row-action data-testid="add-status-link" href="@LinkGenerator.RouteAddStatus(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="status">Change</govuk-summary-list-row-action>
        </govuk-summary-list-row-actions>
    </govuk-summary-list-row>

    @if (Model.StartDateRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>Start date</govuk-summary-list-row-key>
            <govuk-summary-list-row-value use-empty-fallback>@Model.TrainingStartDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
            <govuk-summary-list-row-actions>
                <govuk-summary-list-row-action data-testid="add-start-date-link" href="@LinkGenerator.RouteAddStartAndEndDate(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="start date">Change</govuk-summary-list-row-action>
            </govuk-summary-list-row-actions>
        </govuk-summary-list-row>
    }

    @if (Model.EndDateRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>End date</govuk-summary-list-row-key>
            <govuk-summary-list-row-value use-empty-fallback>@Model.TrainingEndDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
            <govuk-summary-list-row-actions>
                <govuk-summary-list-row-action data-testid="add-end-date-link" href="@LinkGenerator.RouteAddStartAndEndDate(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="end date">Change</govuk-summary-list-row-action>
            </govuk-summary-list-row-actions>
        </govuk-summary-list-row>
    }

    @if (Model.HoldsFromRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>Held since</govuk-summary-list-row-key>
            <govuk-summary-list-row-value use-empty-fallback>@Model.HoldsFrom?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
            <govuk-summary-list-row-actions>
                <govuk-summary-list-row-action data-testid="add-holds-from-link" href="@LinkGenerator.RouteAddHoldsFrom(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="held since">Change</govuk-summary-list-row-action>
            </govuk-summary-list-row-actions>
        </govuk-summary-list-row>
    }

    @if (Model.HasInductionExemptionRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>Induction exemption</govuk-summary-list-row-key>
            <govuk-summary-list-row-value use-empty-fallback>@(Model.IsExemptFromInduction.HasValue ? Model.IsExemptFromInduction.Value ? "Yes" : "No" : null)</govuk-summary-list-row-value>
            @if (!Model.HasImplicitExemption.HasValue || Model.HasImplicitExemption.HasValue && !Model.HasImplicitExemption.Value)
            {
                <govuk-summary-list-row-actions>
                    <govuk-summary-list-row-action data-testid="add-induction-exemption-link" href="@LinkGenerator.RouteAddInductionExemption(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="induction exemption">Change</govuk-summary-list-row-action>
                </govuk-summary-list-row-actions>
            }
        </govuk-summary-list-row>
    }

    @if (Model.TrainingProviderRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>Training provider</govuk-summary-list-row-key>
            <govuk-summary-list-row-value use-empty-fallback>@Model.TrainingProvider</govuk-summary-list-row-value>
            <govuk-summary-list-row-actions>
                <govuk-summary-list-row-action data-testid="add-training-provider-link" href="@LinkGenerator.RouteAddTrainingProvider(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="training provider">Change</govuk-summary-list-row-action>
            </govuk-summary-list-row-actions>
        </govuk-summary-list-row>
    }

    @if (Model.DegreeTypeRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>Degree type</govuk-summary-list-row-key>
            <govuk-summary-list-row-value use-empty-fallback>@Model.DegreeType</govuk-summary-list-row-value>
            <govuk-summary-list-row-actions>
                <govuk-summary-list-row-action data-testid="add-degree-type-link" href="@LinkGenerator.RouteAddDegreeType(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="degree type">Change</govuk-summary-list-row-action>
            </govuk-summary-list-row-actions>
        </govuk-summary-list-row>
    }

    @if (Model.TrainingCountryRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>Country of training</govuk-summary-list-row-key>
            <govuk-summary-list-row-value use-empty-fallback>@Model.TrainingCountry</govuk-summary-list-row-value>
            <govuk-summary-list-row-actions>
                <govuk-summary-list-row-action data-testid="add-country-link" href="@LinkGenerator.RouteAddCountry(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="training country">Change</govuk-summary-list-row-action>
            </govuk-summary-list-row-actions>
        </govuk-summary-list-row>
    }

    @if (Model.AgeSpecialismRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
            @if (Model.TrainingAgeSpecialismRangeFrom is not null && Model.TrainingAgeSpecialismRangeTo is not null)
            {
                <govuk-summary-list-row-value use-empty-fallback>@Model.TrainingAgeSpecialismRange</govuk-summary-list-row-value>
                <govuk-summary-list-row-actions>
                    <govuk-summary-list-row-action data-testid="add-age-range-link" href="@LinkGenerator.RouteAddAgeRangeSpecialism(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="age range">Change</govuk-summary-list-row-action>
                </govuk-summary-list-row-actions>
            }
            else
            {
                <govuk-summary-list-row-value use-empty-fallback>@Model.TrainingAgeSpecialismType?.GetDisplayName()</govuk-summary-list-row-value>
                <govuk-summary-list-row-actions>
                    <govuk-summary-list-row-action data-testid="add-age-range-link" href="@LinkGenerator.RouteAddAgeRangeSpecialism(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="age range">Change</govuk-summary-list-row-action>
                </govuk-summary-list-row-actions>
            }
        </govuk-summary-list-row>
    }

    @if (Model.TrainingSubjectsRequired != FieldRequirement.NotApplicable)
    {
        <govuk-summary-list-row>
            <govuk-summary-list-row-key>Subjects</govuk-summary-list-row-key>
            <govuk-summary-list-row-value>
                @if (Model.TrainingSubjects is not null && Model.TrainingSubjects.Any())
                {
                    <ul class="govuk-list">
                        @foreach (var subject in Model.TrainingSubjects)
                        {
                            <li>@subject</li>
                        }
                    </ul>
                }
                else
                {
                    <span use-empty-fallback></span>
                }
            </govuk-summary-list-row-value>
            <govuk-summary-list-row-actions>
                <govuk-summary-list-row-action data-testid="add-subjects-link" href="@LinkGenerator.RouteAddSubjectSpecialisms(Model.PersonId, Model.JourneyInstanceId, Model.FromCheckAnswers)" visually-hidden-text="training subjects">Change</govuk-summary-list-row-action>
            </govuk-summary-list-row-actions>
        </govuk-summary-list-row>
    }
</govuk-summary-list>
