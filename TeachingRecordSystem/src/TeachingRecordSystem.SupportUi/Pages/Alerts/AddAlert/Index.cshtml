@page "/alerts/add"
@model IndexModel
@addTagHelper *, Joonasw.AspNetCore.SecurityHeaders
@{
    ViewBag.Title = "Add an alert";
}

@section Styles {
    <link rel="stylesheet" href="~/Styles/Components/accessible-autocomplete.min.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/Scripts/Components/accessible-autocomplete.min.js"></script>
    <script asp-add-nonce="true">
        window.onload = function () {
            accessibleAutocomplete.enhanceSelectElement({
                selectElement: document.querySelector('#@nameof(Model.AlertTypeId)'),
                onConfirm: function (selected) {
                    if (!selected) {
                        return;
                    }

                    var selectElement = document.querySelector('#@nameof(Model.AlertTypeId)-select');
                    var selectOptions = Array.from(selectElement.options);
                    var detailsElement = document.querySelector('#@nameof(Model.Details)');
                    var previousAlertValue = detailsElement.dataset.alertvalue;
                    var previousSelectedOption = previousAlertValue ? selectOptions.find(option => option.dataset.alertvalue === previousAlertValue) : undefined;
                    var selectedOption = selectOptions.find(option => (option.textContent || option.innerText) === selected);
                    // Need to do this as it doesn't get set if implementing an onConfirm function with enhanceSelectElement
                    selectedOption.selected = true;

                    if (!previousSelectedOption ||
                            (detailsElement.value == "") ||
                            (previousSelectedOption && detailsElement.value === previousSelectedOption.dataset.defaulttext)) {
                        detailsElement.value = selectedOption.dataset.defaulttext;
                    }

                    detailsElement.dataset.alertvalue = selectedOption.dataset.alertvalue;                    
                },
            })
        }
    </script>
}

@section BeforeContent {
    <govuk-back-link href="@LinkGenerator.PersonAlerts(Model.PersonId)">Back</govuk-back-link>
}

<h1 class="govuk-heading-l">@ViewBag.Title</h1>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds-from-desktop">
        <form method="post">
            <govuk-select asp-for="AlertTypeId" label-class="govuk-label--m">
                <govuk-select-item value=""></govuk-select-item>
                @foreach (var alertType in Model.AlertTypes!)
                {
                    <govuk-select-item data-defaulttext="@alertType.DefaultText" data-alertvalue="@alertType.Value" value="@alertType.AlertTypeId">@alertType.Name</govuk-select-item>
                }
            </govuk-select>

            <govuk-textarea asp-for="Details" label-class="govuk-label--m"/>

            <govuk-input asp-for="Link" label-class="govuk-label--m"/>

            <govuk-date-input asp-for="StartDate">
                <govuk-date-input-fieldset>
                    <govuk-date-input-fieldset-legend class="govuk-fieldset__legend--m" />
                </govuk-date-input-fieldset>
            </govuk-date-input>

            <govuk-button type="submit">Continue</govuk-button>
        </form>
    </div>
</div>
