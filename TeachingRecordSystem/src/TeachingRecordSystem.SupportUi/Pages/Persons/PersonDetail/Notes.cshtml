@page "/persons/{personId}/notes"
@using TeachingRecordSystem.Core.Dqt.Models
@using TeachingRecordSystem.SupportUi.Pages.Common;
@using TeachingRecordSystem.Core.Services.Files;
@inject IFileService FileService;
@model TeachingRecordSystem.SupportUi.Pages.Persons.PersonDetail.NotesModel
@{
    Layout = "Layout";
    ViewBag.SelectedTab = PersonDetailSubNavigationTab.Notes;
    var person = HttpContext.Features.GetRequiredFeature<CurrentPersonFeature>();
}

@section BeforeContent {
    <govuk-back-link href="@LinkGenerator.Persons.PersonDetail.Index(person.PersonId)">Back to record</govuk-back-link>
}

<h2 class="govuk-heading-m">Notes</h2>

@if (!Model.CanViewNotes)
{
    <govuk-notification-banner data-testid="no-notes-permission">
        <p class="govuk-notification-banner__heading">
            You do not have permission to view Notes on this record
            <a class="govuk-notification-banner__link" href="mailto:TQ.DATARECEIPT@education.gov.uk">Contact the TRA</a> for more information.
        </p>
    </govuk-notification-banner>
}
else
{
    if (Model.CanAddNotes)
    {
        <govuk-button-link href="@LinkGenerator.Persons.PersonDetail.AddNote(person.PersonId)" data-testid="add-note-button">Add a note</govuk-button-link>
    }

    @if (Model.Notes!.Count == 0)
    {
        <p class="govuk-body" data-testid="no-notes">There are no notes associated with this record</p>
    }
    else
    {
        foreach (var note in Model.Notes)
        {
            <div data-testid="note" class="govuk-!-margin-bottom-3">
                <div class="govuk-heading-s">
                    Added by <span data-testid="@note.NoteId-note-created-by">@note.CreatedBy</span>
                    on <span data-testid="@note.NoteId-note-created-on">@note.CreatedOn.ToString($"{UiDefaults.DateOnlyDisplayFormat} 'at' HH:mm")</span>
                </div>
                <div class="govuk-details">
                    <div class="govuk-details__text">
                        <p data-testid="@note.NoteId-note-text">
                            @(Html.ConvertNewlinesToLineBreaks(note.Content))
                        </p>
                        @if (note.FileId is Guid fileId)
                        {
                            var downloadUrl = await FileService.GetFileUrlAsync(fileId, TimeSpan.FromMinutes(15));
                            <div class="govuk-heading-s govuk-!-margin-bottom-0">Attached file</div>
                            <a href=@downloadUrl target="_blank" class="govuk-link">
                                <span data-testid="@note.NoteId-note-file-name">@note.OriginalFileName</span> (opens in a new tab)
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    }
}
