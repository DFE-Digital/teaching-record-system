@using Optional.Unsafe
@using TeachingRecordSystem.Core.Events
@using TeachingRecordSystem.Core.Events.Legacy
@model TimelineItem<TimelineEvent<TeachingRecordSystem.Core.Events.Legacy.DqtInductionUpdatedEvent>>
@{
    var dqtUpdatedEvent = Model.ItemModel.Event;
    var induction = dqtUpdatedEvent.Induction;
    var oldInduction = dqtUpdatedEvent.OldInduction;
}

<div class="moj-timeline__item govuk-!-padding-bottom-2" data-testid="timeline-item-dqt-induction-updated-event">
    <div class="moj-timeline__header">
        <h2 class="moj-timeline__title">DQT induction updated</h2>
    </div>
    <p class="moj-timeline__date">
        <span data-testid="raised-by">By @Model.ItemModel.RaisedByUser.Name on</span>
        <time datetime="@Model.Timestamp.ToString("O")" data-testid="timeline-item-time">@Model.FormattedTimestamp</time>
    </p>
    <div class="moj-timeline__description">
        <govuk-summary-list>
            @if (dqtUpdatedEvent.Changes.HasFlag(DqtInductionUpdatedEventChanges.Status))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Induction status</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="induction-status" use-empty-fallback>@induction.InductionStatus.ValueOrDefault()</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }

            @if (dqtUpdatedEvent.Changes.HasFlag(DqtInductionUpdatedEventChanges.ExemptionReason))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Exemption reason</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="exemption-reason" use-empty-fallback>@induction.InductionExemptionReason.ValueOrDefault()</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }

            @if (dqtUpdatedEvent.Changes.HasFlag(DqtInductionUpdatedEventChanges.StartDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Started on</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="start-date" use-empty-fallback>@induction.StartDate.ValueOrDefault()?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }

            @if (dqtUpdatedEvent.Changes.HasFlag(DqtInductionUpdatedEventChanges.CompletionDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Completed on</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="completion-date" use-empty-fallback>@induction.CompletionDate.ValueOrDefault()?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
        </govuk-summary-list>
        <govuk-details class="govuk-!-margin-bottom-2" data-testid="previous-data">
            <govuk-details-summary>Previous data</govuk-details-summary>
            <govuk-details-text>
                <govuk-summary-list>
                    @if (dqtUpdatedEvent.Changes.HasFlag(DqtInductionUpdatedEventChanges.Status))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Induction status</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-induction-status" use-empty-fallback>@oldInduction.InductionStatus.ValueOrDefault()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }

                    @if (dqtUpdatedEvent.Changes.HasFlag(DqtInductionUpdatedEventChanges.ExemptionReason))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Exemption reason</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-exemption-reason" use-empty-fallback>@oldInduction.InductionExemptionReason.ValueOrDefault()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }

                    @if (dqtUpdatedEvent.Changes.HasFlag(DqtInductionUpdatedEventChanges.StartDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Started on</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-start-date" use-empty-fallback>@oldInduction.StartDate.ValueOrDefault()?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }

                    @if (dqtUpdatedEvent.Changes.HasFlag(DqtInductionUpdatedEventChanges.CompletionDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Completed on</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-completion-date" use-empty-fallback>@oldInduction.CompletionDate.ValueOrDefault()?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                </govuk-summary-list>
            </govuk-details-text>
        </govuk-details>
    </div>
</div>
