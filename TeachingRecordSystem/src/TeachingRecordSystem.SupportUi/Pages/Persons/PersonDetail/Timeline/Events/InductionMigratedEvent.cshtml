@using Optional.Unsafe
@using TeachingRecordSystem.Core.Events
@using TeachingRecordSystem.Core.Services.Files
@inject ReferenceDataCache ReferenceDataCache
@model TimelineItem<TimelineEvent<InductionMigratedEvent>>
@{
    var migratedEvent = Model.ItemModel.Event;
    var dqtInduction = migratedEvent.DqtInduction;
}

<div class="moj-timeline__item govuk-!-padding-bottom-2" data-testid="timeline-item-induction-migrated-event">
    <div class="moj-timeline__header">
        <h2 class="moj-timeline__title">Induction migrated</h2>
    </div>
    <p class="moj-timeline__date">
        <span data-testid="raised-by">By @Model.ItemModel.RaisedByUser.Name on</span>
        <time datetime="@Model.Timestamp.ToString("O")" data-testid="timeline-item-time">@Model.FormattedTimestamp</time>
    </p>
    <div class="moj-timeline__description">
        <govuk-summary-list>
            <govuk-summary-list-row>
                <govuk-summary-list-row-key>Induction status</govuk-summary-list-row-key>
                <govuk-summary-list-row-value data-testid="induction-status">@migratedEvent.InductionStatus.GetTitle()</govuk-summary-list-row-value>
            </govuk-summary-list-row>
            @if (migratedEvent.InductionExemptionReasonId is Guid exemptionReasonId)
            {
                var exemptionReason = await ReferenceDataCache.GetInductionExemptionReasonByIdAsync(exemptionReasonId);
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Induction exemption reason</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="exemption-reason">@exemptionReason.Name</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (migratedEvent.InductionStartDate.HasValue)
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Started on</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="start-date">@migratedEvent.InductionStartDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (migratedEvent.InductionCompletedDate.HasValue)
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Completed on</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="completed-date">@migratedEvent.InductionCompletedDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
        </govuk-summary-list>
        <govuk-details class="govuk-!-margin-bottom-2" data-testid="previous-data">
            <govuk-details-summary>Previous data</govuk-details-summary>
            <govuk-details-text>
                <govuk-summary-list>
                    @if (@dqtInduction.InductionStatus.HasValue)
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>DQT induction status</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="dqt-induction-status">@dqtInduction.InductionStatus.ValueOrDefault()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (@dqtInduction.InductionExemptionReason.HasValue)
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>DQT induction exemption reason</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="dqt-exemption-reason">@dqtInduction.InductionExemptionReason.ValueOrDefault()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                </govuk-summary-list>
            </govuk-details-text>
        </govuk-details>
    </div>
</div>
