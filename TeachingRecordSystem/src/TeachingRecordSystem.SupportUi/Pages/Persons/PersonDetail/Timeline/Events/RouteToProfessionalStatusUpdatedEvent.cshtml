@using TeachingRecordSystem.Core.Events
@using TeachingRecordSystem.Core.Services.Files
@using TeachingRecordSystem.SupportUi.Pages.RoutesToProfessionalStatus
@inject ReferenceDataCache ReferenceDataCache
@inject IFileService FileService
@model TimelineItem<TimelineEvent<RouteToProfessionalStatusUpdatedEvent>>
@{
    var updatedEvent = Model.ItemModel.Event;
    var oldDetails = Model.ItemModel.Event.OldRouteToProfessionalStatus;
    var professionalStatus = updatedEvent.RouteToProfessionalStatus;
    var routeType = await ReferenceDataCache.GetRouteToProfessionalStatusTypeByIdAsync(professionalStatus.RouteToProfessionalStatusTypeId);
    var trainingProvider = professionalStatus.TrainingProviderId.HasValue ? await ReferenceDataCache.GetTrainingProviderByIdAsync(professionalStatus.TrainingProviderId.Value) : null;
    var country = !string.IsNullOrEmpty(professionalStatus.TrainingCountryId) ? await ReferenceDataCache.GetTrainingCountryByIdAsync(professionalStatus.TrainingCountryId) : null;
    var degreeType = professionalStatus.DegreeTypeId.HasValue ? await ReferenceDataCache.GetDegreeTypeByIdAsync(professionalStatus.DegreeTypeId.Value) : null;
    var ageRangeType = professionalStatus.TrainingAgeSpecialismType;
    var ageRangeFromTo = (professionalStatus.TrainingAgeSpecialismRangeFrom is not null && professionalStatus.TrainingAgeSpecialismRangeTo is not null) ?
        $"From {professionalStatus.TrainingAgeSpecialismRangeFrom} to {professionalStatus.TrainingAgeSpecialismRangeTo}" : null;
    var subjects = await SubjectDisplayHelper.GetFormattedSubjectNamesAsync(professionalStatus.TrainingSubjectIds, ReferenceDataCache);
    var oldTrainingProvider = oldDetails.TrainingProviderId.HasValue ? await ReferenceDataCache.GetTrainingProviderByIdAsync(oldDetails.TrainingProviderId.Value) : null;
    var oldCountry = !string.IsNullOrEmpty(oldDetails.TrainingCountryId) ? await ReferenceDataCache.GetTrainingCountryByIdAsync(oldDetails.TrainingCountryId) : null;
    var oldDegreeType = oldDetails.DegreeTypeId.HasValue ? await ReferenceDataCache.GetDegreeTypeByIdAsync(oldDetails.DegreeTypeId.Value) : null;
    var oldAgeRangeType = oldDetails.TrainingAgeSpecialismType;
    var oldAgeRangeFromTo = (oldDetails.TrainingAgeSpecialismRangeFrom is not null && oldDetails.TrainingAgeSpecialismRangeTo is not null) ?
        $"From {oldDetails.TrainingAgeSpecialismRangeFrom} to {oldDetails.TrainingAgeSpecialismRangeTo}" : null;
    var oldSubjects = await SubjectDisplayHelper.GetFormattedSubjectNamesAsync(oldDetails.TrainingSubjectIds, ReferenceDataCache);
    var evidenceFileUrl = updatedEvent.EvidenceFile is not null ? await FileService.GetFileUrlAsync(updatedEvent.EvidenceFile!.FileId, TimeSpan.FromMinutes(15)) : null;
}

<div class="moj-timeline__item govuk-!-padding-bottom-2" data-testid="timeline-item-route-updated-event">
    <div class="moj-timeline__header">
        <h2 class="moj-timeline__title">Route updated</h2>
    </div>
    <p class="moj-timeline__date">
        <span data-testid="raised-by">By @Model.ItemModel.RaisedByUser.Name on</span>
        <time datetime="@Model.Timestamp.ToString("O")" data-testid="timeline-item-time">@Model.FormattedTimestamp</time>
    </p>
    <div class="moj-timeline__description">
        <govuk-summary-list>
            @if(updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonHasEyps))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Person has Eyps</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="has-eyps">@(updatedEvent.PersonAttributes.HasEyps ? "Yes" : "No")</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if(updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonEytsDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>EYTS date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="eyts-date" use-empty-fallback>@updatedEvent.PersonAttributes.EytsDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if(updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonPqtsDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>PQTS date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="pqts-date" use-empty-fallback>@updatedEvent.PersonAttributes.PqtsDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if(updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonQtsDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>QTS date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="qts-date" use-empty-fallback>@updatedEvent.PersonAttributes.QtsDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonQtlsStatus))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>QTLS status</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="qtls-status">@updatedEvent.PersonAttributes.QtlsStatus.ToString()</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if(updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.Status))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Status</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="status" use-empty-fallback>@professionalStatus.Status.GetDisplayName()</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.StartDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Start date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="start-date" use-empty-fallback>@professionalStatus.TrainingStartDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.EndDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>End date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="end-date" use-empty-fallback>@professionalStatus.TrainingEndDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.HoldsFrom))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Professional status date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="award-date" use-empty-fallback>@professionalStatus.HoldsFrom?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.ExemptFromInduction))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Induction exemption</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="exemption" use-empty-fallback>@(professionalStatus.ExemptFromInduction.HasValue ? professionalStatus.ExemptFromInduction.Value ? "Yes" : "No" : null)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingProvider))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Training provider</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="training-provider" use-empty-fallback>@trainingProvider?.Name</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.DegreeType))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Degree type</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="degree-type" use-empty-fallback>@degreeType?.Name</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingCountry))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Country</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="country" use-empty-fallback>@country?.Name</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismRangeFrom) || updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismRangeTo))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="age-range" use-empty-fallback>@ageRangeFromTo</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismType))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="age-range-type" use-empty-fallback>@ageRangeType?.GetDisplayName()</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingSubjectIds))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Subjects </govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="subjects"><list-text-items text-items="@subjects" /></govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
        </govuk-summary-list>
        <govuk-details class="govuk-!-margin-bottom-2">
            <govuk-details-summary>Reason for change</govuk-details-summary>
            <govuk-details-text>
                <govuk-summary-list>
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Reason</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value data-testid="reason" use-empty-fallback>@updatedEvent.ChangeReason</govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Reason details</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>
                            @if (updatedEvent.ChangeReasonDetail is not null)
                            {
                                <multi-line-text text="@updatedEvent.ChangeReasonDetail" data-testid="reason-detail" />
                            }
                            else
                            {
                                <span use-empty-fallback data-testid="reason-detail"></span>
                            }
                        </govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Evidence</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value>
                            @if (evidenceFileUrl is not null)
                            {
                                <a href="@evidenceFileUrl" class="govuk-link" rel="noreferrer noopener" target="_blank" data-testid="uploaded-evidence-link">@($"{updatedEvent.EvidenceFile!.Name} (opens in new tab)")</a>
                            }
                            else
                            {
                                <span data-testid="uploaded-evidence-link" use-empty-fallback></span>
                            }
                        </govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                </govuk-summary-list>
            </govuk-details-text>
        </govuk-details>
        <govuk-details class="govuk-!-margin-bottom-2">
            <govuk-details-summary>Previous data</govuk-details-summary>
            <govuk-details-text>
                <govuk-summary-list>
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonHasEyps))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Person has EYPS</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-has-eyps">@(updatedEvent.OldPersonAttributes.HasEyps ? "Yes" : "No")</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonEytsDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>EYTS date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-eyts-date" use-empty-fallback>@updatedEvent.OldPersonAttributes.EytsDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonPqtsDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>PQTS date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-pqts-date" use-empty-fallback>@updatedEvent.OldPersonAttributes.PqtsDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonQtsDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>QTS date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-qts-date" use-empty-fallback>@updatedEvent.OldPersonAttributes.QtsDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.PersonQtlsStatus))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>QTLS status</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-qtls-status">@updatedEvent.OldPersonAttributes.QtlsStatus.ToString()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.Status))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Status</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-status" use-empty-fallback>@oldDetails.Status.GetDisplayName()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.StartDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Start date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-start-date" use-empty-fallback>@oldDetails.TrainingStartDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.EndDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>End date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-end-date" use-empty-fallback>@oldDetails.TrainingEndDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.HoldsFrom))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Professional status date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-award-date" use-empty-fallback>@oldDetails.HoldsFrom?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.ExemptFromInduction))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Induction exemption</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-exemption" use-empty-fallback>@(oldDetails.ExemptFromInduction.HasValue ? oldDetails.ExemptFromInduction.Value ? "Yes" : "No" : null)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingProvider))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Training provider</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-training-provider" use-empty-fallback>@oldTrainingProvider?.Name</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.DegreeType))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Degree type</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-degree-type" use-empty-fallback>@oldDegreeType?.Name</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingCountry))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Country</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-country" use-empty-fallback>@oldCountry?.Name</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismRangeFrom) || updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismRangeTo))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-age-range" use-empty-fallback>@oldAgeRangeFromTo</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismType))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-age-range-type" use-empty-fallback>@oldAgeRangeType?.GetDisplayName()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(RouteToProfessionalStatusUpdatedEventChanges.TrainingSubjectIds))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Subjects </govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testId="old-subjects"><list-text-items text-items="@oldSubjects" /></govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                </govuk-summary-list>
            </govuk-details-text>
        </govuk-details>
    </div>
</div>
