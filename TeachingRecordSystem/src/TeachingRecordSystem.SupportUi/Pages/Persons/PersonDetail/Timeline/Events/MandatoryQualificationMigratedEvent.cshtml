@using TeachingRecordSystem.Core.Events
@model TimelineItem<TimelineEvent<MandatoryQualificationMigratedEvent>>
@{
    var migratedEvent = Model.ItemModel.Event;
    var mandatoryQualification = migratedEvent.MandatoryQualification;
}

<div class="moj-timeline__item govuk-!-padding-bottom-2" data-testid="timeline-item-mq-migrated-event">
    <div class="moj-timeline__header">
        <h2 class="moj-timeline__title">Mandatory qualification migrated</h2>
    </div>
    <p class="moj-timeline__date">
        <span data-testid="raised-by">By @Model.ItemModel.RaisedByUser.Name on</span>
        <time datetime="@Model.Timestamp.ToString("O")" data-testid="timeline-item-time">
            @Model.Timestamp.ToString("dd MMMMM yyyy 'at' h:mm tt")
        </time>
    </p>
    <div class="moj-timeline__description">
        @if (migratedEvent.Changes != MandatoryQualificationMigratedEventChanges.None)
        {
            <govuk-details data-testid="previous-data">
                <govuk-details-summary>Previous data</govuk-details-summary>
                <govuk-details-text>
                    <govuk-summary-list>
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Training provider</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="provider">@(mandatoryQualification.Provider is not null ? mandatoryQualification.Provider.DqtMqEstablishmentName : "None")</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    </govuk-summary-list>
                </govuk-details-text>
            </govuk-details>
        }        
    </div>
</div>
