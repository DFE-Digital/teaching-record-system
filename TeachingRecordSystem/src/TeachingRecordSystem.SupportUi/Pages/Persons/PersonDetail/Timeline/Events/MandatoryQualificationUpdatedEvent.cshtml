@using TeachingRecordSystem.Core.Events
@using TeachingRecordSystem.Core.Services.Files
@inject IFileService FileService
@model TimelineItem<TimelineEvent<MandatoryQualificationUpdatedEvent>>
@{
    var updatedEvent = Model.ItemModel.Event;
    var mandatoryQualification = updatedEvent.MandatoryQualification;
    var oldMandatoryQualification = updatedEvent.OldMandatoryQualification;
    var evidenceFileUrl = updatedEvent.EvidenceFile is not null ? await FileService.GetFileUrl(updatedEvent.EvidenceFile!.FileId, TimeSpan.FromMinutes(15)) : null;
}

<div class="moj-timeline__item govuk-!-padding-bottom-2" data-testid="timeline-item-mq-updated-event">
    <div class="moj-timeline__header">
        <h2 class="moj-timeline__title">Mandatory qualification changed</h2>
    </div>
    <p class="moj-timeline__date">
        <span data-testid="raised-by">By @Model.ItemModel.RaisedByUser.Name on</span>
        <time datetime="@Model.Timestamp.ToString("O")" data-testid="timeline-item-time">@Model.FormattedTimestamp</time>
    </p>
    <div class="moj-timeline__description">
        @if (updatedEvent.ChangeReason is not null)
        {
            <govuk-details class="govuk-!-margin-bottom-2" data-testid="reason-for-change">
                <govuk-details-summary>Reason for change</govuk-details-summary>
                <govuk-details-text>
                    <govuk-summary-list>
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Reason</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="change-reason">@(!string.IsNullOrEmpty(updatedEvent.ChangeReason) ? updatedEvent.ChangeReason : "None")</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>More detail</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="change-reason-detail"><multi-line-text text="@(!string.IsNullOrEmpty(updatedEvent.ChangeReasonDetail) ? updatedEvent.ChangeReasonDetail : "None")" /></govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                        @if (evidenceFileUrl is not null)
                        {
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>Evidence</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value data-testid="evidence"><a href="@evidenceFileUrl" class="govuk-link" rel="noreferrer noopener" target="_blank" data-testid="uploaded-evidence-link">@($"{updatedEvent.EvidenceFile!.Name} (opens in new tab)")</a></govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                        }
                    </govuk-summary-list>
                </govuk-details-text>
            </govuk-details>
        }
        <govuk-details class="govuk-!-margin-bottom-2" data-testid="previous-data">
            <govuk-details-summary>Previous data</govuk-details-summary>
            <govuk-details-text>
                <govuk-summary-list>                
                @if (updatedEvent.Changes.HasFlag(MandatoryQualificationUpdatedEventChanges.Provider))
                {
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Training provider</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value data-testid="provider">@(oldMandatoryQualification.Provider?.Name ?? oldMandatoryQualification.Provider?.DqtMqEstablishmentName ?? "None")</govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

                @if (updatedEvent.Changes.HasFlag(MandatoryQualificationUpdatedEventChanges.Specialism))
                {
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Specialism</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value data-testid="specialism">@(oldMandatoryQualification.Specialism?.GetTitle() ?? "None")</govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

                @if (updatedEvent.Changes.HasFlag(MandatoryQualificationUpdatedEventChanges.StartDate))
                {
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Start date</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value data-testid="start-date">@(oldMandatoryQualification.StartDate?.ToString(UiDefaults.DateOnlyDisplayFormat) ?? "None")</govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

                @if (updatedEvent.Changes.HasFlag(MandatoryQualificationUpdatedEventChanges.Status))
                {
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>Status</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value data-testid="status">@(oldMandatoryQualification.Status?.GetTitle() ?? "None")</govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }

                @if (updatedEvent.Changes.HasFlag(MandatoryQualificationUpdatedEventChanges.EndDate))
                {
                    <govuk-summary-list-row>
                        <govuk-summary-list-row-key>End date</govuk-summary-list-row-key>
                        <govuk-summary-list-row-value data-testid="end-date">@(oldMandatoryQualification.EndDate?.ToString(UiDefaults.DateOnlyDisplayFormat) ?? "None")</govuk-summary-list-row-value>
                    </govuk-summary-list-row>
                }
                </govuk-summary-list>
            </govuk-details-text>
        </govuk-details>
    </div>
</div>
