@using TeachingRecordSystem.Core.Events
@inject ReferenceDataCache ReferenceDataCache
@model TimelineItem<TimelineEvent<ProfessionalStatusUpdatedEvent>>
@{
    var updatedEvent = Model.ItemModel.Event;
    var oldDetails = Model.ItemModel.Event.OldProfessionalStatus;
    var professionalStatus = updatedEvent.ProfessionalStatus;
    var routeType = await ReferenceDataCache.GetRouteToProfessionalStatusByIdAsync(professionalStatus.RouteToProfessionalStatusId);
    var trainingProvider = professionalStatus.TrainingProviderId.HasValue ? await ReferenceDataCache.GetTrainingProviderByIdAsync(professionalStatus.TrainingProviderId.Value) : null;
    var country = !string.IsNullOrEmpty(professionalStatus.TrainingCountryId) ? await ReferenceDataCache.GetTrainingCountryByIdAsync(professionalStatus.TrainingCountryId) : null;
    var degreeType = professionalStatus.DegreeTypeId.HasValue ? await ReferenceDataCache.GetDegreeTypeByIdAsync(professionalStatus.DegreeTypeId.Value) : null;
    var ageRangeType = professionalStatus.TrainingAgeSpecialismType;
    var ageRangeFromTo = (professionalStatus.TrainingAgeSpecialismRangeFrom is not null && professionalStatus.TrainingAgeSpecialismRangeTo is not null) ?
        $"From {professionalStatus.TrainingAgeSpecialismRangeFrom} to {professionalStatus.TrainingAgeSpecialismRangeTo}" : null;
    var subjects = professionalStatus.TrainingSubjectIds is not null ?
            professionalStatus.TrainingSubjectIds
                .Join((await ReferenceDataCache.GetTrainingSubjectsAsync()), id => id, subject => subject.TrainingSubjectId, (_, subject) => subject.Name)
                .OrderByDescending(name => name)
                .ToArray() : null;
    var oldTrainingProvider = oldDetails.TrainingProviderId.HasValue ? await ReferenceDataCache.GetTrainingProviderByIdAsync(oldDetails.TrainingProviderId.Value) : null;
    var oldCountry = !string.IsNullOrEmpty(oldDetails.TrainingCountryId) ? await ReferenceDataCache.GetTrainingCountryByIdAsync(oldDetails.TrainingCountryId) : null;
    var oldDegreeType = oldDetails.DegreeTypeId.HasValue ? await ReferenceDataCache.GetDegreeTypeByIdAsync(oldDetails.DegreeTypeId.Value) : null;
    var oldAgeRangeType = oldDetails.TrainingAgeSpecialismType;
    var oldAgeRangeFromTo = (oldDetails.TrainingAgeSpecialismRangeFrom is not null && oldDetails.TrainingAgeSpecialismRangeTo is not null) ?
        $"From {oldDetails.TrainingAgeSpecialismRangeFrom} to {oldDetails.TrainingAgeSpecialismRangeTo}" : null;
    var oldSubjects = oldDetails.TrainingSubjectIds is not null ?
            oldDetails.TrainingSubjectIds
                .Join((await ReferenceDataCache.GetTrainingSubjectsAsync()), id => id, subject => subject.TrainingSubjectId, (_, subject) => subject.Name)
                .OrderByDescending(name => name)
                .ToArray() : null;
}

<div class="moj-timeline__item govuk-!-padding-bottom-2" data-testid="timeline-item-route-updated-event">
    <div class="moj-timeline__header">
        <h2 class="moj-timeline__title">Route updated</h2>
    </div>
    <p class="moj-timeline__date">
        <span data-testid="raised-by">By @Model.ItemModel.RaisedByUser.Name on</span>
        <time datetime="@Model.Timestamp.ToString("O")" data-testid="timeline-item-time">@Model.FormattedTimestamp</time>
    </p>
    <div class="moj-timeline__description">
        <govuk-summary-list>
            @if(updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.PersonHasEyps))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Person has Eyps</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="has-eyps">@(Model.ItemModel.Event.PersonAttributes.HasEyps ? "Yes" : "No")</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if(updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.PersonEytsDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>EYTS award date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="eyts-date" use-empty-fallback>@Model.ItemModel.Event.PersonAttributes.EytsDate</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if(updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.PersonPqtsDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>PQTS award date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="pqts-date" use-empty-fallback>@Model.ItemModel.Event.PersonAttributes.PqtsDate</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if(updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.PersonQtsDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>QTS award date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="qts-date" use-empty-fallback>@Model.ItemModel.Event.PersonAttributes.QtsDate</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if(updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.Status))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Status</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="status" use-empty-fallback>@professionalStatus.Status.GetDisplayName()</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.StartDate))
            {
                <govuk-summary-list-row show-if=false>
                    <govuk-summary-list-row-key>Start date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="start-date" use-empty-fallback>@professionalStatus.TrainingStartDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.EndDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>End date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="end-date" use-empty-fallback>@professionalStatus.TrainingEndDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.AwardedDate))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Professional Status award date</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="award-date" use-empty-fallback>@professionalStatus.AwardedDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.ExemptFromInduction))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Has exemption</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="exemption" use-empty-fallback>@(professionalStatus.ExemptFromInduction.HasValue ? professionalStatus.ExemptFromInduction.Value ? "Yes" : "No" : null)</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingProvider))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Training provider</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="training-provider" use-empty-fallback>@trainingProvider?.Name</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.DegreeType))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Degree type</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="degree-type" use-empty-fallback>@degreeType?.Name</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingCountry))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Country</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="country" use-empty-fallback>@country?.Name</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismRangeFrom) || updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismRangeTo))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="age-range" use-empty-fallback>@ageRangeFromTo</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismType))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
                    <govuk-summary-list-row-value data-testid="age-range-type" use-empty-fallback>@ageRangeType?.GetDisplayName()</govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
            @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingSubjectIds))
            {
                <govuk-summary-list-row>
                    <govuk-summary-list-row-key>Subjects </govuk-summary-list-row-key>
                <govuk-summary-list-row-value><list-text-items text-items="@subjects"/></govuk-summary-list-row-value>
                </govuk-summary-list-row>
            }
        </govuk-summary-list>
        <govuk-details class="govuk-!-margin-bottom-2">
            <govuk-details-summary>Previous data</govuk-details-summary>
            <govuk-details-text>
                <govuk-summary-list>
                    @if(updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.PersonEytsDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>EYTS award date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-eyts-date" use-empty-fallback>@Model.ItemModel.Event.PersonAttributes.EytsDate</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if(updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.PersonEytsDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>PQTS award date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-pqts-date" use-empty-fallback>@Model.ItemModel.Event.PersonAttributes.PqtsDate</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if(updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.PersonEytsDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>QTS award date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-qts-date" use-empty-fallback>@Model.ItemModel.Event.PersonAttributes.QtsDate</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.Status))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Status</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-status" use-empty-fallback>@oldDetails.Status.GetDisplayName()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.StartDate))
                    {
                        <govuk-summary-list-row show-if=false>
                            <govuk-summary-list-row-key>Start date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-start-date" use-empty-fallback>@oldDetails.TrainingStartDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.EndDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>End date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-end-date" use-empty-fallback>@oldDetails.TrainingEndDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.AwardedDate))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Professional Status award date</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-award-date" use-empty-fallback>@oldDetails.AwardedDate?.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.ExemptFromInduction))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Has exemption</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-exemption" use-empty-fallback>@(oldDetails.ExemptFromInduction.HasValue ? oldDetails.ExemptFromInduction.Value ? "Yes" : "No" : null)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingProvider))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Training provider</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-training-provider" use-empty-fallback>@oldTrainingProvider?.Name</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.DegreeType))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Degree type</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-degree-type" use-empty-fallback>@oldDegreeType?.Name</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingCountry))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Country</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-country" use-empty-fallback>@oldCountry?.Name</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismRangeFrom) || updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismRangeTo))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-age-range" use-empty-fallback>@oldAgeRangeFromTo</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingAgeSpecialismType))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Age range</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testid="old-age-range-type" use-empty-fallback>@oldAgeRangeType?.GetDisplayName()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                    @if (updatedEvent.Changes.HasFlag(ProfessionalStatusUpdatedEventChanges.TrainingSubjectIds))
                    {
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Subjects </govuk-summary-list-row-key>
                            <govuk-summary-list-row-value data-testId="old-subjects"><list-text-items text-items="@oldSubjects" /></govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    }
                </govuk-summary-list>
            </govuk-details-text>
        </govuk-details>
    </div>
</div>
