@using TeachingRecordSystem.Core.Dqt.Models
@inject IClock Clock
@model TimelineItem<CrmTask>
@{
    var crmTask = Model.ItemModel;
    var user = Model.ItemModel.Extract<SystemUser>(SystemUser.EntityLogicalName, SystemUser.PrimaryIdAttribute);

    var (status, statusTagClass) = crmTask.ScheduledEnd is DateTime scheduledEnd && scheduledEnd < Clock.UtcNow ? ("Overdue", "govuk-tag--red"):
        crmTask.StateCode == TaskState.Open ? ("Active", null):
        ("Closed", "govuk-tag--grey");
}

<div class="moj-timeline__item govuk-!-padding-bottom-2" data-testid="timeline-item">
    <div class="moj-timeline__header">
        <h2 class="moj-timeline__title" data-testid="timeline-item-title">
            Task @(crmTask.StateCode == TaskState.Completed ? "completed" : crmTask.StateCode == TaskState.Canceled ? "cancelled" : "modified")
        </h2>
        <p class="moj-timeline__byline" data-testid="timeline-item-user">by @user.FirstName @user.LastName</p>
        <govuk-tag class="@statusTagClass" data-testid="timeline-item-status">@status</govuk-tag>
    </div>
    <p class="moj-timeline__date">
        <time datetime="@Model.Timestamp.ToUniversalTime().ToString("O")" data-testid="timeline-item-time">@Model.FormattedTimestamp</time>
    </p>
    <div class="moj-timeline__description">
        <p class="govuk-body" data-testid="timeline-item-summary">@crmTask.Subject</p>
        <p class="govuk-body" data-testid="timeline-item-description">@crmTask.Description</p>
    </div>
</div>
