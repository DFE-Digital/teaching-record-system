@page "/persons/{personId}"
@using TeachingRecordSystem.SupportUi.Pages.Common;
@using TeachingRecordSystem.SupportUi.Pages.Shared
@model TeachingRecordSystem.SupportUi.Pages.Persons.PersonDetail.IndexModel
@{
    Layout = "Layout";
    ViewBag.SelectedTab = PersonSubNavigationTab.General;
}

@if (FeatureProvider.IsEnabled(FeatureNames.Alerts) && Model.HasOpenAlert)
{
    <govuk-notification-banner data-testid="OpenAlertNotification">
        <p class="govuk-notification-banner__heading">
            Alert on record.
            <a class="govuk-notification-banner__link" href="@LinkGenerator.PersonAlerts(Model.PersonId)">View alerts.</a>
        </p>
    </govuk-notification-banner>
}

@{
    var personDetailModel = new PersonDetailViewModel()
    {
        PersonId = Model.PersonId,
        Options = PersonDetailViewModelOptions.ShowAll,
        Trn = Model.Person!.Trn,
        Name = Model.Person.Name,
        PreviousNames = Model.Person.PreviousNames,
        DateOfBirth = Model.Person.DateOfBirth,
        NationalInsuranceNumber = Model.Person.NationalInsuranceNumber,
        Gender = Model.Person.Gender,
        Email = Model.Person.Email,
        MobileNumber = Model.Person.MobileNumber
    };
}
@await Html.PartialAsync("_PersonDetail", personDetailModel)

@{
    if (Model.PersonStatus is not null)
    {
        var personStatusDetailModel = new PersonStatusDetailViewModel()
        {
            EytsDate = Model.PersonStatus.EytsDate,
            HasEyps = Model.PersonStatus.HasEyps,
            InductionStatusInfo = InductionStatusRegistry.All.Single(s => s.Value == Model.PersonStatus.InductionStatus),
            PqtsDate = Model.PersonStatus.PqtsDate,
            QtsDate = Model.PersonStatus.QtsDate
        };
        @await Html.PartialAsync("_PersonStatusDetail", personStatusDetailModel)
    }
}
