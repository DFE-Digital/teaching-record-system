@page "/persons"
@using TeachingRecordSystem.Core.Dqt.Models;
@model TeachingRecordSystem.SupportUi.Pages.Persons.IndexModel
@{
    ViewBag.Title = "All records";
}

<h1 class="govuk-heading-l">@ViewBag.Title</h1>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds-from-desktop">
        <div class="govuk-!-margin-bottom-6">
            <form trs-action="l => l.Persons()" method="get" data-testid="search-form">
                <div class="moj-search trs-search govuk-!-margin-bottom-4">
                    <govuk-input asp-for="Search"
                                 input-class="moj-search__input"
                                 label-class="moj-search__label govuk-!-font-weight-bold"
                                 data-testid="search-input"
                                 type="search">
                        <govuk-input-hint class="moj-search__hint">Search by: Name, TRN or date of birth (DD/MM/YYYY)</govuk-input-hint>
                    </govuk-input>
                    <govuk-button class="moj-search__button" type="submit">Search</govuk-button>
                </div>
                <govuk-select asp-for="SortBy">
                    <govuk-select-item value="@ContactSearchSortByOption.LastNameAscending">@ContactSearchSortByOption.LastNameAscending.GetDisplayName()</govuk-select-item>
                    <govuk-select-item value="@ContactSearchSortByOption.LastNameDescending">@ContactSearchSortByOption.LastNameDescending.GetDisplayName()</govuk-select-item>
                    <govuk-select-item value="@ContactSearchSortByOption.FirstNameAscending">@ContactSearchSortByOption.FirstNameAscending.GetDisplayName()</govuk-select-item>
                    <govuk-select-item value="@ContactSearchSortByOption.FirstNameDescending">@ContactSearchSortByOption.FirstNameDescending.GetDisplayName()</govuk-select-item>
                    <govuk-select-item value="@ContactSearchSortByOption.DateOfBirthAscending">@ContactSearchSortByOption.DateOfBirthAscending.GetDisplayName()</govuk-select-item>
                    <govuk-select-item value="@ContactSearchSortByOption.DateOfBirthDescending">@ContactSearchSortByOption.DateOfBirthDescending.GetDisplayName()</govuk-select-item>
                </govuk-select>
            </form>
        </div>
    </div>
</div>
@if (!string.IsNullOrEmpty(Model.Search))
{
    <div class="govuk-grid-row" data-testid="search-results">
        <div class="govuk-grid-column-full">
            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header govuk-!-width-one-third">Name</th>
                        <th scope="col" class="govuk-table__header">Date of birth</th>
                        <th scope="col" class="govuk-table__header">TRN</th>
                        <th scope="col" class="govuk-table__header">NiNo</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @if (Model.SearchResults is null || Model.SearchResults.Length == 0)
                    {
                        <tr class="govuk-table__row" data-testid="no-matches">
                            <td class="govuk-table__cell" colspan="4">No matching records</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var personInfo in Model.SearchResults!)
                        {
                            <tr class="govuk-table__row" data-testid="person-@personInfo.PersonId">
                                <td class="govuk-table__cell" data-testid="name"><a href="@LinkGenerator.PersonDetail(personInfo.PersonId, search: Model.Search, sortBy: Model.SortBy, pageNumber: Model.PageNumber)" class="govuk-link">@personInfo.Name</a></td>
                                <td class="govuk-table__cell" data-testid="date-of-birth"><span use-empty-fallback>@(personInfo.DateOfBirth.HasValue ? personInfo.DateOfBirth.Value.ToString("dd/MM/yyyy") : string.Empty)</span></td>
                                <td class="govuk-table__cell" data-testid="trn"><span use-empty-fallback>@personInfo.Trn</span></td>
                                <td class="govuk-table__cell" data-testid="nino"><span use-empty-fallback>@personInfo.NationalInsuranceNumber</span></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            @if (Model.TotalKnownPages > 1)
            {
                <govuk-pagination>
                    @if (Model.PreviousPage.HasValue)
                    {
                        <govuk-pagination-previous asp-page="Index" asp-route-search="@Model.Search" asp-route-pagenumber="@Model.PreviousPage" asp-route-sortby="@Model.SortBy" />
                    }

                    @if (Model.DisplayPageNumbers)
                    {
                        @for (int i = 0; i < Model.PaginationPages!.Length; i++)
                        {
                            var item = Model.PaginationPages[i];

                            if (i > 0 && Model.PaginationPages[i - 1] != item - 1)
                            {
                                <govuk-pagination-ellipsis />
                            }

                            <govuk-pagination-item asp-page="Index" asp-route-search="@Model.Search" asp-route-pagenumber="@item" is-current="@(item == Model.PageNumber)">@item</govuk-pagination-item>
                        }
                    }                    

                    @if (Model.NextPage.HasValue)
                    {
                        <govuk-pagination-next asp-page="Index" asp-route-search="@Model.Search" asp-route-pagenumber="@Model.NextPage" asp-route-sortby="@Model.SortBy" />
                    }
                </govuk-pagination>
            }
        </div>
    </div>
}
