@page "/support-tasks/api-trn-requests/{supportTaskReference}/resolve/matches/{handler?}"
@model TeachingRecordSystem.SupportUi.Pages.SupportTasks.ApiTrnRequests.Resolve.Matches
@{
    ViewBag.Title = $"Compare {Model.SourceApplicationUserName} request with potential matches";
    var showDuplicatesSideBySide = Model.PotentialDuplicates!.Length == 1;
}

@section BeforeContent {
    <govuk-back-link href="@(Model.FromCheckAnswers ?
        LinkGenerator.SupportTasks.ApiTrnRequests.Resolve.CheckAnswers(Model.SupportTaskReference!, Model.JourneyInstance!.InstanceId) :
        LinkGenerator.SupportTasks.ApiTrnRequests.Index())"/>
}

<form action="@LinkGenerator.SupportTasks.ApiTrnRequests.Resolve.Matches(Model.SupportTaskReference!, Model.JourneyInstance!.InstanceId)" method="post">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            <span class="govuk-caption-l">Support tasks</span>
            <h1 class="govuk-heading-l">@ViewBag.Title</h1>
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class=@(showDuplicatesSideBySide ? "govuk-grid-column-full-from-desktop" : "govuk-grid-column-one-half-from-desktop")>
            <govuk-inset-text class="govuk-!-margin-top-0">
                Differences are <highlight>highlighted</highlight> on the existing records
            </govuk-inset-text>

            <div class="trs-potential-duplicates @(showDuplicatesSideBySide ? "trs-potential-duplicates--side-by-side" : "")">
                <govuk-summary-card data-testid="request" class="trs-potential-duplicates__item">
                    <govuk-summary-card-title>
                        @Model.SourceApplicationUserName request
                    </govuk-summary-card-title>
                    <govuk-summary-list>
                        @if (showDuplicatesSideBySide)
                        {
                            // Add field so the fields line up when viewed side-by-side
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>Status</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value>Not applicable</govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                        }
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>First name</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value use-empty-fallback>@Model.RequestData!.FirstName</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Middle name</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value use-empty-fallback>@Model.RequestData!.MiddleName</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Last name</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value use-empty-fallback>@Model.RequestData!.LastName</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                        @if (showDuplicatesSideBySide)
                        {
                            // Add field so the fields line up when viewed side-by-side
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>TRN</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value>Not yet assigned</govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                        }
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Date of birth</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value use-empty-fallback>@Model.RequestData!.DateOfBirth.ToString(UiDefaults.DateOnlyDisplayFormat)</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Email address</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value use-empty-fallback>@Model.RequestData!.EmailAddress</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>NI number</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value use-empty-fallback>@Model.RequestData!.NationalInsuranceNumber</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                        <govuk-summary-list-row>
                            <govuk-summary-list-row-key>Gender</govuk-summary-list-row-key>
                            <govuk-summary-list-row-value use-empty-fallback>@Model.RequestData!.Gender?.GetDisplayName()</govuk-summary-list-row-value>
                        </govuk-summary-list-row>
                    </govuk-summary-list>
                </govuk-summary-card>

                @if (!showDuplicatesSideBySide)
                {
                    <h2 class="govuk-heading-m">Potential matches</h2>
                }

                @foreach (var match in Model.PotentialDuplicates!)
                {
                    <govuk-summary-card data-testid="match" data-personid="@match.PersonId" class="trs-potential-duplicates__item">
                        <govuk-summary-card-title>
                            Record @match.Identifier
                        </govuk-summary-card-title>
                        <govuk-summary-card-actions>
                            <govuk-summary-card-action href="@LinkGenerator.Persons.PersonDetail.Index(match.PersonId)" target="_blank">
                                View record (opens in a new tab)
                            </govuk-summary-card-action>
                        </govuk-summary-card-actions>
                        <govuk-summary-list>
                            @{
                                var tags = new List<string>();

                                if (match.HasActiveAlerts)
                                {
                                    tags.Add("Alerts");
                                }

                                if (match.HasQts)
                                {
                                    tags.Add("QTS");
                                }

                                if (match.HasEyts)
                                {
                                    tags.Add("EYTS");
                                }
                            }
                            @if (tags.Count > 0)
                            {
                                <govuk-summary-list-row>
                                    <govuk-summary-list-row-key>Status</govuk-summary-list-row-key>
                                    <govuk-summary-list-row-value>
                                        @foreach (var tag in tags)
                                        {
                                            <govuk-tag>@tag</govuk-tag>
                                        }
                                    </govuk-summary-list-row-value>
                                </govuk-summary-list-row>
                            }

                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>First name</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value use-empty-fallback highlight="@(!match.MatchedAttributes.Contains(PersonMatchedAttribute.FirstName))">
                                    @match.FirstName
                                </govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>Middle name</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value use-empty-fallback highlight="@(!match.MatchedAttributes.Contains(PersonMatchedAttribute.MiddleName))">
                                    @match.MiddleName
                                </govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>Last name</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value use-empty-fallback highlight="@(!match.MatchedAttributes.Contains(PersonMatchedAttribute.LastName))">
                                    @match.LastName
                                </govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>TRN</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value>@match.Trn</govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>Date of birth</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value use-empty-fallback highlight="@(!match.MatchedAttributes.Contains(PersonMatchedAttribute.DateOfBirth))">
                                    @match.DateOfBirth?.ToString(UiDefaults.DateOnlyDisplayFormat)
                                </govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>Email address</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value use-empty-fallback highlight="@(!match.MatchedAttributes.Contains(PersonMatchedAttribute.EmailAddress))">
                                    @match.EmailAddress
                                </govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>NI number</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value use-empty-fallback highlight="@(!match.MatchedAttributes.Contains(PersonMatchedAttribute.NationalInsuranceNumber))">
                                    @match.NationalInsuranceNumber
                                </govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                            <govuk-summary-list-row>
                                <govuk-summary-list-row-key>Gender</govuk-summary-list-row-key>
                                <govuk-summary-list-row-value use-empty-fallback highlight="@(!match.MatchedAttributes.Contains(PersonMatchedAttribute.Gender))">
                                    @match.Gender?.GetDisplayName()
                                </govuk-summary-list-row-value>
                            </govuk-summary-list-row>
                        </govuk-summary-list>
                    </govuk-summary-card>
                }
            </div>
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            <govuk-radios for="PersonId">
                <govuk-radios-fieldset>
                    <govuk-radios-fieldset-legend class="govuk-fieldset__legend--m">
                        What do you want to do with the @Model.SourceApplicationUserName request?
                    </govuk-radios-fieldset-legend>

                    @foreach (var match in Model.PotentialDuplicates!)
                    {
                        <govuk-radios-item value="@match.PersonId">
                            Merge it with Record @match.Identifier
                        </govuk-radios-item>
                    }

                    <govuk-radios-divider>or</govuk-radios-divider>

                    <govuk-radios-item value="@ResolveApiTrnRequestState.CreateNewRecordPersonIdSentinel">
                        Create a new record from it
                    </govuk-radios-item>
                </govuk-radios-fieldset>
            </govuk-radios>

            <div class="govuk-button-group">
                <govuk-button type="submit">Continue</govuk-button>
                <govuk-button type="submit" formaction="@LinkGenerator.SupportTasks.ApiTrnRequests.Resolve.MatchesCancel(Model.SupportTaskReference!, Model.JourneyInstance!.InstanceId)" class="govuk-button--secondary">Cancel</govuk-button>
            </div>
        </div>
    </div>
</form>
