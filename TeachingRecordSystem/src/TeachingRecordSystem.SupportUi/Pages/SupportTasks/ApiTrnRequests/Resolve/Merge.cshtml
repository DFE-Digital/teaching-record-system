@page "/support-tasks/api-trn-requests/{supportTaskReference}/resolve/merge/{handler?}"
@using TeachingRecordSystem.SupportUi.Pages.Shared
@using static ResolveApiTrnRequestState
@model TeachingRecordSystem.SupportUi.Pages.SupportTasks.ApiTrnRequests.Resolve.Merge
@{
    ViewBag.Title = "Select the details to merge into the existing record";
}

@section BeforeContent {
    <govuk-back-link href="@(Model.FromCheckAnswers ?
                         LinkGenerator.SupportTasks.ApiTrnRequests.Resolve.CheckAnswers(Model.SupportTaskReference!, Model.JourneyInstance!.InstanceId) :
                         LinkGenerator.SupportTasks.ApiTrnRequests.Resolve.Matches(Model.SupportTaskReference!, Model.JourneyInstance!.InstanceId))" />
}

@functions {
#pragma warning disable CS1998
    private async Task RenderChoosePersonAttribute(
            string label,
            bool different,
            string name,
            string? leftLabel,
            string? rightLabel,
            PersonAttributeSource? selectedValue)
    {
        var chooseAttributeModel = new ChoosePersonAttributeViewModel()
        {
            Label = label,
            Different = different,
            Name = name,
            LeftValue = PersonAttributeSource.TrnRequest,
            LeftLabel = leftLabel,
            RightValue = PersonAttributeSource.ExistingRecord,
            RightLabel = rightLabel,
            SelectedValue = selectedValue
        };
        <partial name="Shared/_ChoosePersonAttribute" model="@chooseAttributeModel" />
    }
#pragma warning restore CS1998
}

<form action="@LinkGenerator.SupportTasks.ApiTrnRequests.Resolve.Merge(Model.SupportTaskReference!, Model.JourneyInstance!.InstanceId)" method="post">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            <span class="govuk-caption-l">Support tasks</span>
            <h1 class="govuk-heading-l">@ViewBag.Title</h1>
        </div>
    </div>

    <div style="display: flex">
        <div class="govuk-heading-m govuk-!-width-one-half">
            @Model.SourceApplicationUserName request
        </div>
        <div class="govuk-heading-m govuk-!-width-one-half">
            Existing record
        </div>
    </div>

    <table class="govuk-table">
        <tbody class="govuk-table__body">
            @{
                await RenderChoosePersonAttribute(
                    Html.DisplayNameFor(m => m.FirstNameSource),
                    Model.FirstName!.Different,
                    Html.NameFor(m => m.FirstNameSource),
                    Model.FirstName!.TrnRequestValue,
                    Model.FirstName!.ExistingRecordValue,
                    Model.FirstNameSource);

                await RenderChoosePersonAttribute(
                    Html.DisplayNameFor(m => m.MiddleNameSource),
                    Model.MiddleName!.Different,
                    Html.NameFor(m => m.MiddleNameSource),
                    Model.MiddleName!.TrnRequestValue,
                    Model.MiddleName!.ExistingRecordValue,
                    Model.MiddleNameSource);

                await RenderChoosePersonAttribute(
                    Html.DisplayNameFor(m => m.LastNameSource),
                    Model.LastName!.Different,
                    Html.NameFor(m => m.LastNameSource),
                    Model.LastName!.TrnRequestValue,
                    Model.LastName!.ExistingRecordValue,
                    Model.LastNameSource);

                await RenderChoosePersonAttribute(Html.DisplayNameFor(m => m.DateOfBirthSource),
                    Model.DateOfBirth!.Different,
                    Html.NameFor(m => m.DateOfBirthSource),
                    Model.DateOfBirth!.TrnRequestValue?.ToString(UiDefaults.DateOnlyDisplayFormat),
                    Model.DateOfBirth!.ExistingRecordValue?.ToString(UiDefaults.DateOnlyDisplayFormat),
                    Model.DateOfBirthSource);

                await RenderChoosePersonAttribute(
                    Html.DisplayNameFor(m => m.EmailAddressSource),
                    Model.EmailAddress!.Different,
                    Html.NameFor(m => m.EmailAddressSource),
                    Model.EmailAddress!.TrnRequestValue,
                    Model.EmailAddress!.ExistingRecordValue,
                    Model.EmailAddressSource);

                await RenderChoosePersonAttribute(
                    Html.DisplayNameFor(m => m.NationalInsuranceNumberSource),
                    Model.NationalInsuranceNumber!.Different,
                    Html.NameFor(m => m.NationalInsuranceNumberSource),
                    Model.NationalInsuranceNumber!.TrnRequestValue,
                    Model.NationalInsuranceNumber!.ExistingRecordValue,
                    Model.NationalInsuranceNumberSource);

                await RenderChoosePersonAttribute(
                    Html.DisplayNameFor(m => m.GenderSource),
                    Model.Gender!.Different,
                    Html.NameFor(m => m.GenderSource),
                    Model.Gender!.TrnRequestValue?.GetDisplayName(),
                    Model.Gender!.ExistingRecordValue?.GetDisplayName(),
                    Model.GenderSource);
            }
        </tbody>
    </table>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            <govuk-textarea for="Comments" label-class="govuk-label--s" />

            <govuk-warning-text>
                This task will be marked as complete after the record has been updated.
            </govuk-warning-text>

            <div class="govuk-button-group">
                <govuk-button type="submit">Continue</govuk-button>
                <govuk-button type="submit" formaction="@LinkGenerator.SupportTasks.ApiTrnRequests.Resolve.MergeCancel(Model.SupportTaskReference!, Model.JourneyInstance!.InstanceId)" class="govuk-button--secondary">Cancel</govuk-button>
            </div>
        </div>
    </div>
</form>
